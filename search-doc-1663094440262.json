[{"title":"Landmaster","type":0,"sectionRef":"#","url":"api/Landmaster","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#types","content":" "},{"title":"NoiseSolver​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#NoiseSolver","content":"&lt;/&gt; type NoiseSolver = (Vector2 ) → number Returns a deterministic value at position on map. The vector must be normalized to be within 0 and 1.  "},{"title":"LandmasterConfigData​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#LandmasterConfigData","content":"&lt;/&gt; type LandmasterConfigData = { Seed: number, Origin: Vector2 , Frequency: number, Width: number, HeightCeiling: number, WaterHeight: number, Maps: { Height: NoiseSolver?, Heat: NoiseSolver?, Rain: NoiseSolver? }, } The data format usable when configuring Landmaster  "},{"title":"TerrainData​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#TerrainData","content":"&lt;/&gt; type TerrainData = {[number]: {[number]: {[number]: T}}} Data usable within Terrain:WriteVoxels(). "},{"title":"Functions​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#new","content":"&lt;/&gt; Landmaster.new(config: LandmasterConfigData) → () Constructs a landmaster.  "},{"title":"Debug​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#Debug","content":"&lt;/&gt; Landmaster:Debug( map: NoiseSolver, resolution: number, scale: number ) → Frame  Renders a map gui for the provided solver.  "},{"title":"SolveRegionTerrain​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#SolveRegionTerrain","content":"&lt;/&gt; Landmaster:SolveRegionTerrain(region: Region3 ) → ( Region3 , TerrainData&lt;Enum.Material&gt;, TerrainData&lt;number&gt; ) Given a world region3 it constructs a grid normalized region and the material + precision data tables needed for Terrain:WriteVoxels(). Should be parallel safe.  "},{"title":"BuildRegionTerrain​","type":1,"pageTitle":"Landmaster","url":"api/Landmaster#BuildRegionTerrain","content":"&lt;/&gt; Landmaster:BuildRegionTerrain( gridRegion: Region3 , materialData: TerrainData&lt;Enum.Material&gt;, precisionData: TerrainData&lt;number&gt; ) → () Writes voxels based on the returned values of SolveRegionTerrain. "}]