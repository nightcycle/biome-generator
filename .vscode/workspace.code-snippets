{
	"PseudoEnum": {
		"prefix": "PseudoEnum.new",
		"body": [
			"--- $name",
			"export type $name = PseudoEnumItem & {EnumType: $name${identifier:Enum}}",
			"PseudoEnums.$name = newPseudoEnum({",
			"\tNone = newPseudoEnumItem(1) :: $name,",
			"",
			"})",
			"type $name${identifier:Enum} = typeof(PseudoEnums.$name)"
		],
		"description": "A new PseudoEnum entry.",
		"scope": "lua, luau"
	},
	"Header": {
		"prefix": "Header",
		"body": [
			"local _Reactor = require(game.ReplicatedStorage.Shared.Reactor)",
			"local _Config = require(game.ReplicatedStorage.Shared.Config)",
			"local _PseudoEnum = require(game.ReplicatedStorage.Shared.PseudoEnum)",
			"local _Math = require(game.ReplicatedStorage.Packages.Math)",
			"local _Maid = require(game.ReplicatedStorage.Packages.Maid)",
			"local _Signal = require(game.ReplicatedStorage.Packages.Signal)",
			"",
			"type Maid = _Maid.Maid",
			"type Signal = _Signal.Signal",
			""
		],
		"description": "A basic header for a file.",
		"scope": "lua, luau"
	},
	"GuiComponentTemplate": {
		"prefix": "GuiComponentTemplate",
		"body": [
			"local _StyleGuide = require(game.ReplicatedStorage.Client.StyleGuide)",
			"local _Isotope = require(game.ReplicatedStorage.Packages.Isotope)",
			"local _Synthetic = require(game.ReplicatedStorage.Packages.Synthetic)",
			"local _ColdFusion = require(game.ReplicatedStorage.Packages.ColdFusion)",
			"",
			"type Fuse = _ColdFusion.Fuse",
			"type ValueState = _ColdFusion.ValueState",
			"type State = _ColdFusion.State",
			"type Isotope = _Isotope.Isotope",
			"",
			"export type GuiParameters = {",
			"\tName: (string | State?),",
			"\t[any]: any?,",
			"}",
			"",
			"local $componentName = {}",
			"$componentName.__index = $componentName",
			"setmetatable($componentName, _Isotope)",
			"",
			"function $componentName:Destroy()",
			"\t_Isotope.Destroy(self)",
			"end",
			"",
			"function $componentName.new(config: GuiParameters): $instanceName",
			"\tlocal self: Isotope = setmetatable(_Isotope.new() :: any, $componentName)",
			"",
			"\tlocal _Fuse: Fuse = self._Fuse",
			"\tlocal _Value = _Fuse.Value",
			"\tlocal _Computed = _Fuse.Computed",
			"\tlocal _Children = _Fuse.Children",
			"\tlocal _Event = _Fuse.Event",
			"\tlocal _Changed = _Fuse.Changed",
			"",
			"\tself.Name = self:Import(config.Name, \"$componentName\")",
			"\tself.ClassName = _Fuse.Computed(function() return \"$componentName\" end)",
			"",
			"\tlocal parameters = {",
			"\t\tName = self.Name,",
			"\t}",
			"",
			"\tfor k, v in pairs(config) do",
			"\t\tif parameters[k] == nil and self[k] == nil then",
			"\t\t\tparameters[k] = v",
			"\t\tend",
			"\tend",
			"",
			"\tself.Instance = _Fuse.new(\"$instanceName\")(parameters) :: $instanceName",
			"",
			"\tself:Construct()",
			"\tassert(self.Instance and self.Instance:IsA(\"$instanceName\"))",
			"\treturn self.Instance",
			"end",
			"",
			"return $componentName"
		],
		"description": "A useful framework for making custom gui components"
	},
	"OOPSignal": {
		"prefix": "OOPSignal",
		"body": [
			"self.$signalName = _Signal.new(); self._Maid:GiveTask(self.$signalName)",
		],
		"description": "Creates a signal bound to self as well as a maid."
	},
	"StoryTemplate": {
		"prefix": "StoryTemplate",
		"body": [
		  "local _Reactor = require(game.ReplicatedStorage.Shared.Reactor)",
		  "local _Config = require(game.ReplicatedStorage.Shared.Config)",
		  "local _PseudoEnum = require(game.ReplicatedStorage.Shared.PseudoEnum)",
		  "local _Math = require(game.ReplicatedStorage.Packages.Math)",
		  "local _Maid = require(game.ReplicatedStorage.Packages.Maid)",
		  "",
		  "return function(coreGui: ScreenGui)",
		  "\tlocal maid = _Maid.new()",
		  "\t",
		  "\ttask.spawn(function()",
		  "\t\tlocal _Module = require(script.Parent)",
		  "\t\t",
		  "\tend)",
		  "\t",
		  "\treturn function()",
		  "\t\tmaid:Destroy()",
		  "\tend",
		  "end"
		],
		"description": "A template used for creating HoarceKat stories"
	   }
}